// Autogenerated file: DO NOT EDIT
// Created on 2025-06-02 4:02:16 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;
using Ara3D.Collections;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ArrayHelpers
    {
        // Fields

        // With functions 

        // Regular Constructor

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ArrayHelpers Create() => new ArrayHelpers();

        // Static default implementation
        public static readonly ArrayHelpers Default = default;

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ArrayHelpers;
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ArrayHelpers other) => true;
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(ArrayHelpers other) => false;
        [MethodImpl(AggressiveInlining)] public static Boolean operator==(ArrayHelpers a, ArrayHelpers b) => true;
        [MethodImpl(AggressiveInlining)] public static Boolean operator!=(ArrayHelpers a, ArrayHelpers b) => false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes();
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{  }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)] public static IReadOnlyList<Integer2> Integer2Array(IReadOnlyList<Integer> xs) => xs.ZipPairs((a, b)  => new Integer2(a, b));
[MethodImpl(AggressiveInlining)] public static IReadOnlyList<Integer3> Integer3Array(IReadOnlyList<Integer> xs) => xs.ZipTriplets((a, b, c)  => new Integer3(a, b, c));
[MethodImpl(AggressiveInlining)] public static IReadOnlyList<Integer4> Integer4Array(IReadOnlyList<Integer> xs) => xs.ZipQuartets((a, b, c, d)  => new Integer4(a, b, c, d));
[MethodImpl(AggressiveInlining)] public static IReadOnlyList<Vector2> Vector2Array(IReadOnlyList<Number> xs) => xs.ZipPairs((a, b)  => new Vector2(a, b));
[MethodImpl(AggressiveInlining)] public static IReadOnlyList<Vector3> Vector3Array(IReadOnlyList<Number> xs) => xs.ZipTriplets((a, b, c)  => new Vector3(a, b, c));
[MethodImpl(AggressiveInlining)] public static IReadOnlyList<Vector4> Vector4Array(IReadOnlyList<Number> xs) => xs.ZipQuartets((a, b, c, d)  => new Vector4(a, b, c, d));

        // Unimplemented interface functions
    }
}
