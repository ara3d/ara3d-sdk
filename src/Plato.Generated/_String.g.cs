// Autogenerated file: DO NOT EDIT
// Created on 2025-06-07 1:42:34 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;
using Ara3D.Collections;

namespace Ara3D.Geometry
{
    [StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct String: IValue, IOrderable<String>
    {
        // Static factory function
        [MethodImpl(AggressiveInlining)] public static String Create() => new String();

        // Static default implementation
        public static readonly String Default = default;

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(String other) => Value.Equals(other.Value);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(String other) => !Value.Equals(other.Value);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is String other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public static Boolean operator==(String a, String b) => a.Equals(b);
        [MethodImpl(AggressiveInlining)] public static Boolean operator!=(String a, String b) => !a.Equals(b);
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Value.GetHashCode();
        [MethodImpl(AggressiveInlining)] public override string ToString() => Value.ToString();

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)] public Boolean LessThan(String b) => this.LessThanOrEquals(b).And(this.NotEquals(b));
[MethodImpl(AggressiveInlining)] public Boolean GreaterThan(String b) => b.LessThan(this);
[MethodImpl(AggressiveInlining)] public Boolean GreaterThanOrEquals(String b) => b.LessThanOrEquals(this);
[MethodImpl(AggressiveInlining)] public String Lesser(String b) => this.LessThanOrEquals(b) ? this : b;
[MethodImpl(AggressiveInlining)] public String Greater(String b) => this.GreaterThanOrEquals(b) ? this : b;
[MethodImpl(AggressiveInlining)] public Integer CompareTo(String b) => this.LessThanOrEquals(b) ? this.Equals(b) ? ((Integer)0) : ((Integer)1).Negative : ((Integer)1);

        // Unimplemented interface functions
        [MethodImpl(AggressiveInlining)] public Boolean LessThanOrEquals(String y) => this <= y;
    }
    // Extension methods for the type
    public static class StringExtensions
    {
        [MethodImpl(AggressiveInlining)] public static Boolean LessThanOrEquals(this String x, String y) => x.LessThanOrEquals(y);
        [MethodImpl(AggressiveInlining)] public static Boolean LessThanOrEquals(this string x, String y) => ((String)x).LessThanOrEquals(y);
        [MethodImpl(AggressiveInlining)] public static Boolean LessThan(this string a, String b) => ((String)a).LessThan(b);
        [MethodImpl(AggressiveInlining)] public static Boolean GreaterThan(this string a, String b) => ((String)a).GreaterThan(b);
        [MethodImpl(AggressiveInlining)] public static Boolean GreaterThanOrEquals(this string a, String b) => ((String)a).GreaterThanOrEquals(b);
        [MethodImpl(AggressiveInlining)] public static String Lesser(this string a, String b) => ((String)a).Lesser(b);
        [MethodImpl(AggressiveInlining)] public static String Greater(this string a, String b) => ((String)a).Greater(b);
        [MethodImpl(AggressiveInlining)] public static Integer CompareTo(this string a, String b) => ((String)a).CompareTo(b);
    }
}
