// Autogenerated file: DO NOT EDIT
// Created on 2025-06-07 6:14:52 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;
using Ara3D.Collections;

namespace Ara3D.Geometry
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Translation3D: IRigidTransform3D
    {
        // Fields
        [DataMember] public readonly Vector3 Vector;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Translation3D WithVector(Vector3 vector) => new Translation3D(vector);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Translation3D(Vector3 vector) { Vector = vector; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Translation3D Create(Vector3 vector) => new Translation3D(vector);

        // Static default implementation
        public static readonly Translation3D Default = default;

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Vector3(Translation3D self) => self.Vector;
        [MethodImpl(AggressiveInlining)] public static implicit operator Translation3D(Vector3 value) => new Translation3D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Translation3D other) => Vector.Equals(other.Vector);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Translation3D other) => !Vector.Equals(other.Vector);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Translation3D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Vector);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Vector\" = {Vector} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        public Matrix4x4 Matrix { [MethodImpl(AggressiveInlining)] get  => Ara3D.Geometry.Matrix4x4.CreateTranslation(this.Vector); } 
public static Translation3D Identity { [MethodImpl(AggressiveInlining)] get  => Constants.Zero3; } 
[MethodImpl(AggressiveInlining)] public Point3D Multiply(Point3D v) => this.TransformPoint(v);
[MethodImpl(AggressiveInlining)]  public static Point3D operator *(Translation3D x, Point3D v) => x.Multiply(v);
        [MethodImpl(AggressiveInlining)] public Vector3 Multiply(Vector3 v) => this.TransformNormal(v);
[MethodImpl(AggressiveInlining)]  public static Vector3 operator *(Translation3D x, Vector3 v) => x.Multiply(v);
        [MethodImpl(AggressiveInlining)] public Transform3D Multiply(Matrix4x4 m) => this.Compose(m);
[MethodImpl(AggressiveInlining)]  public static Transform3D operator *(Translation3D x, Matrix4x4 m) => x.Multiply(m);
        public Transform3D Transform3D { [MethodImpl(AggressiveInlining)] get  => this.Matrix; } 
[MethodImpl(AggressiveInlining)]  public static implicit operator Transform3D(Translation3D x) => x.Transform3D;
        [MethodImpl(AggressiveInlining)] public Point3D TransformPoint(Point3D v) => v.Vector3.Transform(this.Matrix);
[MethodImpl(AggressiveInlining)] public Vector3 TransformNormal(Vector3 v) => v.TransformNormal(this.Matrix);
public Matrix4x4 Matrix4x4 { [MethodImpl(AggressiveInlining)] get  => this.Matrix; } 
[MethodImpl(AggressiveInlining)]  public static implicit operator Matrix4x4(Translation3D t) => t.Matrix4x4;
        public Transform3D Invert { [MethodImpl(AggressiveInlining)] get  => this.Matrix.Invert; } 
[MethodImpl(AggressiveInlining)] public Transform3D Compose(Matrix4x4 m) => this.Matrix.Multiply(m);

        // Unimplemented interface functions
    }
    // Extension methods for the type
    public static class Translation3DExtensions
    {
    }
}
