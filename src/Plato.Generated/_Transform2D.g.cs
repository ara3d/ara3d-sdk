// Autogenerated file: DO NOT EDIT
// Created on 2025-06-05 2:34:17 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;
using Ara3D.Collections;

namespace Ara3D.Geometry
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Transform2D: ITransform2D
    {
        // Fields
        [DataMember] public readonly Matrix3x2 Matrix;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Transform2D WithMatrix(Matrix3x2 matrix) => new Transform2D(matrix);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Transform2D(Matrix3x2 matrix) { Matrix = matrix; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Transform2D Create(Matrix3x2 matrix) => new Transform2D(matrix);

        // Static default implementation
        public static readonly Transform2D Default = default;

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Matrix3x2(Transform2D self) => self.Matrix;
        [MethodImpl(AggressiveInlining)] public static implicit operator Transform2D(Matrix3x2 value) => new Transform2D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Transform2D other) => Matrix.Equals(other.Matrix);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Transform2D other) => !Matrix.Equals(other.Matrix);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Transform2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Matrix);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Matrix\" = {Matrix} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        Matrix3x2 ITransform2D.Matrix { [MethodImpl(AggressiveInlining)] get => Matrix; }

        // Implemented interface functions

        // Unimplemented interface functions
    }
    // Extension methods for the type
    public static class Transform2DExtensions
    {
    }
}
