// Autogenerated file: DO NOT EDIT
// Created on 2025-06-07 1:42:34 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;
using Ara3D.Collections;

namespace Ara3D.Geometry
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct QuadGrid3D: IGeometry3D
    {
        // Fields
        [DataMember] public readonly IReadOnlyList2D<Point3D> PointGrid;
        [DataMember] public readonly Boolean ClosedX;
        [DataMember] public readonly Boolean ClosedY;

        // With functions 
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithPointGrid(IReadOnlyList2D<Point3D> pointGrid) => new QuadGrid3D(pointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithClosedX(Boolean closedX) => new QuadGrid3D(PointGrid, closedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithClosedY(Boolean closedY) => new QuadGrid3D(PointGrid, ClosedX, closedY);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public QuadGrid3D(IReadOnlyList2D<Point3D> pointGrid, Boolean closedX, Boolean closedY) { PointGrid = pointGrid; ClosedX = closedX; ClosedY = closedY; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static QuadGrid3D Create(IReadOnlyList2D<Point3D> pointGrid, Boolean closedX, Boolean closedY) => new QuadGrid3D(pointGrid, closedX, closedY);

        // Static default implementation
        public static readonly QuadGrid3D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (IReadOnlyList2D<Point3D>, Boolean, Boolean)(QuadGrid3D self) => (self.PointGrid, self.ClosedX, self.ClosedY);
        [MethodImpl(AggressiveInlining)] public static implicit operator QuadGrid3D((IReadOnlyList2D<Point3D>, Boolean, Boolean) value) => new QuadGrid3D(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out IReadOnlyList2D<Point3D> pointGrid, out Boolean closedX, out Boolean closedY) { pointGrid = PointGrid; closedX = ClosedX; closedY = ClosedY;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(QuadGrid3D other) => PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(QuadGrid3D other) => !PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is QuadGrid3D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(PointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"PointGrid\" = {PointGrid}, \"ClosedX\" = {ClosedX}, \"ClosedY\" = {ClosedY} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)] public QuadGrid3D Deform(System.Func<Point3D, Point3D> f) => (this.PointGrid.Map(f), this.ClosedX, this.ClosedY);
public Integer NumColumns { [MethodImpl(AggressiveInlining)] get  => this.PointGrid.NumColumns; } 
public Integer NumRows { [MethodImpl(AggressiveInlining)] get  => this.PointGrid.NumRows; } 
public IReadOnlyList<Point3D> Points { [MethodImpl(AggressiveInlining)] get  => this.PointGrid; } 
public IReadOnlyList<Integer4> FaceIndices { [MethodImpl(AggressiveInlining)] get  => this.PointGrid.AllQuadFaceIndices(this.ClosedX, this.ClosedY); } 

        // Unimplemented interface functions
    }
    // Extension methods for the type
    public static class QuadGrid3DExtensions
    {
    }
}
